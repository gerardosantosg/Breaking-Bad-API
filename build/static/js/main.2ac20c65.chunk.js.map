{"version":3,"sources":["images/bblogo.png","images/spinnerbb.gif","components/ui/Header.js","components/characters/CharacterItem.js","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","App.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","CharacterItem","item","img","portrayed","name","nickname","occupation","status","Spinner","SpinnerGif","style","margin","width","display","CharacterGrid","items","isLoading","map","key","char_id","Search","getQuery","useState","text","setText","type","placeholder","onChange","event","q","target","value","App","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","console","log","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,8MCW5BC,EARA,WACb,OACE,4BAAQC,UAAU,UAChB,yBAAKC,IAAKC,IAAMC,IAAI,WCyBXC,EA7BO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKI,EAAKC,IAAKH,IAAKE,EAAKE,aAEhC,yBAAKP,UAAU,aACb,4BAAKK,EAAKG,MACV,4BACE,4BACE,+CADF,IACgCH,EAAKE,WAErC,4BACE,6CADF,IAC8BF,EAAKI,UAEnC,4BACE,+CADF,IACgCJ,EAAKK,YAErC,4BACE,2CADF,IAC4BL,EAAKM,a,iBCV9BC,EAVC,WACd,OACE,yBACEX,IAAKY,IACLC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAASC,QAAS,SAClDd,IAAI,aCQKe,EAZO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MACvB,OAD8C,EAAhBC,UAE5B,kBAAC,EAAD,MAEA,6BAASpB,UAAU,SAChBmB,EAAME,KAAI,SAAChB,GAAD,OACT,kBAAC,EAAD,CAAeiB,IAAKjB,EAAKkB,QAASlB,KAAMA,SCcjCmB,EArBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAAS,IADF,mBACxBC,EADwB,KAClBC,EADkB,KAM/B,OACE,6BAAS5B,UAAU,UACjB,8BACE,2BACE6B,KAAK,OACL7B,UAAU,eACV8B,YAAY,uBACZC,SAAU,SAACC,GAAD,OAXAC,EAWoBD,EAAME,OAAOC,MAVjDP,EAAQK,QACRR,EAASQ,GAFM,IAACA,GAYVE,MAAOR,OCgBFS,EA1BH,WAAO,IAAD,EACUV,mBAAS,IADnB,mBACTP,EADS,KACFkB,EADE,OAEkBX,oBAAS,GAF3B,mBAETN,EAFS,KAEEkB,EAFF,OAGUZ,mBAAS,IAHnB,mBAGTa,EAHS,KAGFC,EAHE,KAiBhB,OAZAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACIC,IAAM,sDAAD,OAC8BJ,IAFvC,OACXK,EADW,OAIjBC,QAAQC,IAAIF,EAAOG,MACnBV,EAASO,EAAOG,MAChBT,GAAa,GANI,2CAAH,qDAQhBU,KACC,CAACT,IAGF,yBAAKvC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQyB,SAAU,SAACQ,GAAD,OAAOO,EAASP,MAClC,kBAAC,EAAD,CAAeb,UAAWA,EAAWD,MAAOA,MCvBlD8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2ac20c65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bblogo.3795f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/spinnerbb.29b76ffe.gif\";","import React from 'react'\r\nimport logo from '../../images/bblogo.png'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='center'>\r\n      <img src={logo} alt='logo' />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst CharacterItem = ({ item }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-inner'>\r\n        <div className='card-front'>\r\n          <img src={item.img} alt={item.portrayed} />\r\n        </div>\r\n        <div className='card-back'>\r\n          <h1>{item.name}</h1>\r\n          <ul>\r\n            <li>\r\n              <strong>Actor Name:</strong> {item.portrayed}\r\n            </li>\r\n            <li>\r\n              <strong>Nickname:</strong> {item.nickname}\r\n            </li>\r\n            <li>\r\n              <strong>Occupation:</strong> {item.occupation}\r\n            </li>\r\n            <li>\r\n              <strong>Status:</strong> {item.status}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterItem\r\n","import React from 'react'\r\nimport SpinnerGif from '../../images/spinnerbb.gif'\r\nconst Spinner = () => {\r\n  return (\r\n    <img\r\n      src={SpinnerGif}\r\n      style={{ margin: 'auto', width: '200px', display: 'block' }}\r\n      alt='loading'\r\n    ></img>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport CharacterItem from './CharacterItem'\r\nimport Spinner from '../ui/Spinner'\r\nconst CharacterGrid = ({ items, isLoading }) => {\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <section className='cards'>\r\n      {items.map((item) => (\r\n        <CharacterItem key={item.char_id} item={item}></CharacterItem>\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CharacterGrid\r\n","import React, { useState } from 'react'\r\n\r\nconst Search = ({ getQuery }) => {\r\n  const [text, setText] = useState('')\r\n  const onChange = (q) => {\r\n    setText(q)\r\n    getQuery(q)\r\n  }\r\n  return (\r\n    <section className='search'>\r\n      <form>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          placeholder='Search Characters...'\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={text}\r\n        />\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport Header from './components/ui/Header'\nimport CharacterGrid from './components/characters/CharacterGrid'\nimport Search from './components/ui/Search'\nconst App = () => {\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [query, setQuery] = useState('')\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios(\n        `https://www.breakingbadapi.com/api/characters?name=${query}`\n      )\n      console.log(result.data)\n      setItems(result.data)\n      setIsLoading(false)\n    }\n    fetchItems()\n  }, [query])\n\n  return (\n    <div className='container'>\n      <Header />\n      <Search getQuery={(q) => setQuery(q)} />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}